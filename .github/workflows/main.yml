name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: todos
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_DB: todos
      REDIS_HOST: redis

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: yarn install
        working-directory: ./app

      - name: Install Podman and Podman-compose
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
          sudo apt install -y python3-pip
          pip3 install podman-compose

      - name: Clean up Podman environment
        run: |
          podman stop $(podman ps -a -q) || true
          podman rm $(podman ps -a -q) || true
          podman volume prune -f || true

 

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t nnhainam/podmandemo:latest .
        working-directory: ./app

      - name: Push Docker image to Docker Hub
        run: docker push nnhainam/podmandemo:latest

      - name: Run Podman Compose
        run: podman-compose up -d --build
        working-directory: ./app

      - name: Stop and remove Podman containers
        run: podman-compose down
        working-directory: ./app
